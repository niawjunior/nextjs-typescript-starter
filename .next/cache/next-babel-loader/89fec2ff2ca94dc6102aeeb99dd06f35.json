{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post(props) {\n  var router = useRouter();\n\n  var getPost = function getPost() {\n    return _regeneratorRuntime.async(function getPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]]);\n  };\n\n  useEffect(function () {\n    function fetchBookList() {\n      var response, json;\n      return _regeneratorRuntime.async(function fetchBookList$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              json = _context2.sent;\n              _context2.next = 11;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"This is the blog content.\"));\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["React","useEffect","useRouter","fetch","withLayout","Post","props","router","getPost","fetchBookList","response","json","query","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,CAACC,KAAD,EAAgB;AACrC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAEA,MAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAECL,KAAK,CAAC,2CAAD,CAFN;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAMAF,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeQ,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BN,KAAK,CAAC,2CAAD,CAFhC;;AAAA;AAEUO,cAAAA,QAFV;AAAA;AAAA,+CAIuBA,QAAQ,CAACC,IAAT,EAJvB;;AAAA;AAIUA,cAAAA,IAJV;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUD,GAXQ,EAWN,EAXM,CAAT;AAYA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,MAAM,CAACK,KAAP,CAAaC,EAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CADF;AAMD,CA3BD;;AA6BA,eAAeT,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post: React.FC = (props: any) => {\n  const router = useRouter()\n\n  const getPost = async () => {\n    try {\n      return await fetch('https://api.github.com/repos/zeit/next.js')\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    async function fetchBookList () {\n      try {\n        const response = await fetch('https://api.github.com/repos/zeit/next.js')\n\n        const json = await response.json()\n        // console.log(json);\n      } catch (error) {\n\n      }\n    }\n  }, [])\n  return (\n    <>\n      <h1>{ router.query.id }</h1>\n      <p>This is the blog content.</p>\n    </>\n  )\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}