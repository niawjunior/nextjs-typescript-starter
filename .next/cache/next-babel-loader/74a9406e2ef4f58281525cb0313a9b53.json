{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from '../fetch';\n\nvar UsersLink = function UsersLink(props) {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: '/users/[id]',\n    as: \"/users/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.name)));\n};\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Home Page\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.data.map(function (item, key) {\n    return __jsx(UsersLink, {\n      key: key,\n      id: item.id,\n      name: item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://jsonplaceholder.typicode.com/users/'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data.map(function (item) {\n              return {\n                id: item.id,\n                name: item.name\n              };\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/index.tsx"],"names":["Layout","Link","fetch","UsersLink","props","id","name","Index","data","map","item","key","getInitialProps","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgB;AAChC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,aAAZ;AAA2B,IAAA,EAAE,mBAAYA,KAAK,CAACC,EAAlB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,IAAX,CADF,CADF,CADF;AAOD,CARD;;AAUA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAgB;AAC5B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAYC,GAAZ;AAAA,WACb,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,EAAE,EAAED,IAAI,CAACL,EAA9B;AAAkC,MAAA,IAAI,EAAEK,IAAI,CAACJ,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAf,CAFJ,CAFF,CADF;AAYD,CAbD;;AAeAC,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJV,KAAK,CAAC,4CAAD,CADD;;AAAA;AAChBW,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBN,UAAAA,IAFgB;AAAA,2CAIf;AACLA,YAAAA,IAAI,EAAEA,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAe;AAC5B,qBAAO;AACLL,gBAAAA,EAAE,EAAEK,IAAI,CAACL,EADJ;AAELC,gBAAAA,IAAI,EAAEI,IAAI,CAACJ;AAFN,eAAP;AAID,aALK;AADD,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeC,KAAf","sourcesContent":["import Layout from '../components/Layout'\nimport Link from 'next/link'\nimport fetch from '../fetch'\n\nconst UsersLink = (props: any) => {\n  return (\n    <li>\n      <Link href={'/users/[id]'} as={`/users/${props.id}`}>\n        <a>{ props.name }</a>\n      </Link>\n    </li>\n  )\n}\n\nconst Index = (props: any) => {\n  return (\n    <Layout>\n      <h1>Home Page</h1>\n      <ul>\n        {\n          props.data.map((item: any, key: any) => (\n            <UsersLink key={key} id={item.id} name={item.name}/>\n          ))\n        }\n      </ul>\n    </Layout>\n  )\n}\n\nIndex.getInitialProps = async () => {\n  const res = await fetch('http://jsonplaceholder.typicode.com/users/')\n  const data = await res.json()\n\n  return {\n    data: data.map((item: any) => {\n      return {\n        id: item.id,\n        name: item.name\n      }\n    })\n  }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}