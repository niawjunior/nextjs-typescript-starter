{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post() {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This is the blog content.\"));\n};\n\nPost.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n        case 2:\n          res = _context.sent;\n          data = res.json();\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            data: data.map(function (item) {\n              return item;\n            })\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["useRouter","fetch","withLayout","Post","router","query","id","getInitialProps","res","data","json","console","log","map","item"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,MAAM,CAACC,KAAP,CAAaC,EAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CADF;AAMD,CARD;;AAUAH,IAAI,CAACI,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHN,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfO,UAAAA,GADe;AAEfC,UAAAA,IAFe,GAERD,GAAG,CAACE,IAAJ,EAFQ;AAIrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAJqB,2CAKd;AACLA,YAAAA,IAAI,EAAEA,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD;AAAA,qBAAUA,IAAV;AAAA,aAAT;AADD,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeZ,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post = () => {\n  const router = useRouter()\n  return (\n    <>\n      <h1>{ router.query.id }</h1>\n      <p>This is the blog content.</p>\n    </>\n  )\n}\n\nPost.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n  const data = res.json()\n\n  console.log(data)\n  return {\n    data: data.map((item) => item)\n  }\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}