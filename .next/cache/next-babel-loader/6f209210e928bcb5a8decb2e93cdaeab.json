{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post(props) {\n  var router = useRouter();\n\n  var getPost = function getPost() {\n    return _regeneratorRuntime.async(function getPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]]);\n  };\n\n  useEffect(function () {\n    function fetchBookList() {\n      var response, json;\n      return _regeneratorRuntime.async(function fetchBookList$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setLoading('true');\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searchBook)));\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              json = _context2.sent;\n              // console.log(json);\n              setResult(json.items.map(function (item) {\n                console.log(item.volumeInfo.title);\n                return item.volumeInfo.title;\n              }));\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              setLoading('null');\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"This is the blog content.\"));\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["React","useEffect","useRouter","fetch","withLayout","Post","props","router","getPost","fetchBookList","setLoading","searchBook","response","json","setResult","items","map","item","console","log","volumeInfo","title","query","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,CAACC,KAAD,EAAgB;AACrC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAEA,MAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAECL,KAAK,CAAC,2CAAD,CAFN;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAMAF,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeQ,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIC,cAAAA,UAAU,CAAC,MAAD,CAAV;AAFJ;AAAA,+CAG2BP,KAAK,yDACuBQ,UADvB,EAHhC;;AAAA;AAGUC,cAAAA,QAHV;AAAA;AAAA,+CAOuBA,QAAQ,CAACC,IAAT,EAPvB;;AAAA;AAOUA,cAAAA,IAPV;AAQI;AACAC,cAAAA,SAAS,CACPD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAL,CAAgBC,KAA5B;AACA,uBAAOJ,IAAI,CAACG,UAAL,CAAgBC,KAAvB;AACD,eAHD,CADO,CAAT;AATJ;AAAA;;AAAA;AAAA;AAAA;AAgBIX,cAAAA,UAAU,CAAC,MAAD,CAAV;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBD,GApBQ,EAoBN,EApBM,CAAT;AAqBA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,MAAM,CAACe,KAAP,CAAaC,EAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CADF;AAMD,CApCD;;AAsCA,eAAenB,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post: React.FC = (props: any) => {\n  const router = useRouter()\n\n  const getPost = async () => {\n    try {\n      return await fetch('https://api.github.com/repos/zeit/next.js')\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    async function fetchBookList () {\n      try {\n        setLoading('true')\n        const response = await fetch(\n          `https://www.googleapis.com/books/v1/volumes?q=${searchBook}`\n        )\n\n        const json = await response.json()\n        // console.log(json);\n        setResult(\n          json.items.map(item => {\n            console.log(item.volumeInfo.title)\n            return item.volumeInfo.title\n          })\n        )\n      } catch (error) {\n        setLoading('null')\n      }\n    }\n  }, [])\n  return (\n    <>\n      <h1>{ router.query.id }</h1>\n      <p>This is the blog content.</p>\n    </>\n  )\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}