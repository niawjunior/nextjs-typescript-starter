{"ast":null,"code":"var _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    0: postState,\n    1: setPostState\n  } = useState(Object);\n\n  async function fetchBookList(id) {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${router.query.id}`);\n      const json = await response.json();\n      setPostState(json);\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    if (router.query.id) {\n      fetchBookList(router.query.id);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, postState.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, postState.title));\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["React","useEffect","useState","useRouter","fetch","withLayout","Post","router","postState","setPostState","Object","fetchBookList","id","response","query","json","error","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAACQ,MAAD,CAA1C;;AAEA,iBAAeC,aAAf,CAA8BC,EAA9B,EAAkC;AAChC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,8CAA6CG,MAAM,CAACO,KAAP,CAAaF,EAAG,EAA/D,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAN,MAAAA,YAAY,CAACM,IAAD,CAAZ;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc,CACf;AACF;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,CAACO,KAAP,CAAaF,EAAjB,EAAqB;AACnBD,MAAAA,aAAa,CAACJ,MAAM,CAACO,KAAP,CAAaF,EAAd,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,SAAS,CAACI,EAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,SAAS,CAACS,KAAf,CAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeZ,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post: React.FC = () => {\n  const router = useRouter()\n  const [postState, setPostState] = useState(Object)\n\n  async function fetchBookList (id) {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${router.query.id}`)\n      const json = await response.json()\n      setPostState(json)\n    } catch (error) {\n    }\n  }\n\n  useEffect(() => {\n    if (router.query.id) {\n      fetchBookList(router.query.id)\n    }\n  }, [])\n  return (\n    <>\n      <h1>{ postState.id}</h1>\n      <p>{ postState.title}</p>\n    </>\n  )\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}