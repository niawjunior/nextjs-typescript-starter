{"ast":null,"code":"var _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/users/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../../components/Layout';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    0: userState,\n    1: setUserState\n  } = useState(Object);\n\n  async function fetchBookList(id) {\n    try {\n      const response = await fetch(`http://jsonplaceholder.typicode.com/users/${id}`);\n      const json = await response.json();\n      return json;\n    } catch (error) {\n      setUserState('Error');\n    }\n  }\n\n  useEffect(() => {\n    if (router.query.id) {\n      fetchBookList(String(router.query.id)).then(res => {\n        setUserState(res);\n      });\n    }\n  }, []);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"ID: \", userState.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Name: \", userState.name));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/users/[id]/index.tsx"],"names":["React","useEffect","useState","useRouter","fetch","Layout","Post","router","userState","setUserState","Object","fetchBookList","id","response","json","error","query","String","then","res","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAACQ,MAAD,CAA1C;;AAEA,iBAAeC,aAAf,CAA8BC,EAA9B,EAA0C;AACxC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,6CAA4CQ,EAAG,EAAjD,CAA5B;AACA,YAAME,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAnB;AACA,aAAOA,IAAP;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdN,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD;AACF;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,CAACS,KAAP,CAAaJ,EAAjB,EAAqB;AACnBD,MAAAA,aAAa,CAACM,MAAM,CAACV,MAAM,CAACS,KAAP,CAAaJ,EAAd,CAAP,CAAb,CACGM,IADH,CACQC,GAAG,IAAI;AACXV,QAAAA,YAAY,CAACU,GAAD,CAAZ;AACD,OAHH;AAID;AACF,GAPQ,EAON,EAPM,CAAT;AAQA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUX,SAAS,CAACI,EAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,SAAS,CAACY,IAArB,CAFF,CADF;AAMD,CA5BD;;AA8BA,eAAed,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../../../components/Layout'\n\nconst Post: React.FC = () => {\n  const router = useRouter()\n  const [userState, setUserState] = useState(Object)\n\n  async function fetchBookList (id: string) {\n    try {\n      const response = await fetch(`http://jsonplaceholder.typicode.com/users/${id}`)\n      const json = await response.json()\n      return json\n    } catch (error) {\n      setUserState('Error')\n    }\n  }\n\n  useEffect(() => {\n    if (router.query.id) {\n      fetchBookList(String(router.query.id))\n        .then(res => {\n          setUserState(res)\n        })\n    }\n  }, [])\n  return (\n    <Layout>\n      <h1>ID: { userState.id}</h1>\n      <p>Name: { userState.name}</p>\n    </Layout>\n  )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}