{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post() {\n  var router = useRouter();\n\n  var _useState = useState(Object),\n      postState = _useState[0],\n      setPostState = _useState[1];\n\n  function fetchBookList(id) {\n    var response, json;\n    return _regeneratorRuntime.async(function fetchBookList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(router.query.id)));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setPostState(json);\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  }\n\n  useEffect(function () {\n    if (router.query.id) {\n      fetchBookList(router.query.id);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, postState.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, postState.title));\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["React","useEffect","useState","useRouter","fetch","withLayout","Post","router","Object","postState","setPostState","fetchBookList","id","query","response","json","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAC3B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD2B,kBAEOD,QAAQ,CAACM,MAAD,CAFf;AAAA,MAEpBC,SAFoB;AAAA,MAETC,YAFS;;AAI3B,WAAeC,aAAf,CAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2BR,KAAK,sDAA+CG,MAAM,CAACM,KAAP,CAAaD,EAA5D,EAFhC;;AAAA;AAEUE,YAAAA,QAFV;AAAA;AAAA,6CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGUA,YAAAA,IAHV;AAIIL,YAAAA,YAAY,CAACK,IAAD,CAAZ;AAJJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,MAAM,CAACM,KAAP,CAAaD,EAAjB,EAAqB;AACnBD,MAAAA,aAAa,CAACJ,MAAM,CAACM,KAAP,CAAaD,EAAd,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,SAAS,CAACG,EAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,SAAS,CAACO,KAAf,CAFF,CADF;AAMD,CAxBD;;AA0BA,eAAeX,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post: React.FC = () => {\n  const router = useRouter()\n  const [postState, setPostState] = useState(Object)\n\n  async function fetchBookList (id) {\n    try {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${router.query.id}`)\n      const json = await response.json()\n      setPostState(json)\n    } catch (error) {\n    }\n  }\n\n  useEffect(() => {\n    if (router.query.id) {\n      fetchBookList(router.query.id)\n    }\n  }, [])\n  return (\n    <>\n      <h1>{ postState.id}</h1>\n      <p>{ postState.title}</p>\n    </>\n  )\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}