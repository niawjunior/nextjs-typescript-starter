{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post() {\n  var router = useRouter();\n\n  var _useState = useState(Object),\n      postState = _useState[0],\n      setPostState = _useState[1];\n\n  useEffect(function () {\n    function fetchBookList() {\n      var response, json;\n      return _regeneratorRuntime.async(function fetchBookList$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!router.query.id) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(router.query.id)));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              json = _context.sent;\n              setPostState(json);\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]]);\n    }\n\n    fetchBookList();\n  }, [router.query.id]);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, postState.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, postState.title));\n};\n\nexport default withLayout(Post);","map":{"version":3,"sources":["/Users/niawjunior/Desktop/true/bismarck-ui-ts/pages/p/[id]/index.tsx"],"names":["React","useEffect","useState","useRouter","fetch","withLayout","Post","router","Object","postState","setPostState","fetchBookList","query","id","response","json","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;AAC3B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD2B,kBAEOD,QAAQ,CAACM,MAAD,CAFf;AAAA,MAEpBC,SAFoB;AAAA,MAETC,YAFS;;AAG3BT,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeU,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMJ,MAAM,CAACK,KAAP,CAAaC,EADnB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAG6BT,KAAK,sDAA+CG,MAAM,CAACK,KAAP,CAAaC,EAA5D,EAHlC;;AAAA;AAGYC,cAAAA,QAHZ;AAAA;AAAA,+CAIyBA,QAAQ,CAACC,IAAT,EAJzB;;AAAA;AAIYA,cAAAA,IAJZ;AAKML,cAAAA,YAAY,CAACK,IAAD,CAAZ;AALN;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUAJ,IAAAA,aAAa;AACd,GAZQ,EAYN,CAACJ,MAAM,CAACK,KAAP,CAAaC,EAAd,CAZM,CAAT;AAaA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,SAAS,CAACI,EAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,SAAS,CAACO,KAAf,CAFF,CADF;AAMD,CAtBD;;AAwBA,eAAeX,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport fetch from 'isomorphic-unfetch'\nimport withLayout from '../../../components/Layout'\n\nconst Post: React.FC = () => {\n  const router = useRouter()\n  const [postState, setPostState] = useState(Object)\n  useEffect(() => {\n    async function fetchBookList () {\n      if (router.query.id) {\n        try {\n          const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${router.query.id}`)\n          const json = await response.json()\n          setPostState(json)\n        } catch (error) {\n        }\n      }\n    }\n    fetchBookList()\n  }, [router.query.id])\n  return (\n    <>\n      <h1>{ postState.id}</h1>\n      <p>{ postState.title}</p>\n    </>\n  )\n}\n\nexport default withLayout(Post)\n"]},"metadata":{},"sourceType":"module"}