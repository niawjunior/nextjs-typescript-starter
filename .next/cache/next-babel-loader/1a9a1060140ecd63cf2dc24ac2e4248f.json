{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport withLayout from '../../../components/Layout';\n\nvar Post = function Post() {\n  var router = useRouter();\n\n  var _useState = useState(Object),\n      postState = _useState[0],\n      setPostState = _useState[1];\n\n  function fetchBookList(id) {\n    var response, json;\n    return _regeneratorRuntime.async(function fetchBookList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id)));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            setPostState('Error');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]]);\n  }\n\n  useEffect(function () {\n    if (router.query.id) {\n      fetchBookList(String(router.query.id)).then(function (res) {\n        setPostState(res);\n      });\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, postState.id), __jsx(\"p\", null, postState.title));\n};\n\nexport default withLayout(Post);","map":null,"metadata":{},"sourceType":"module"}